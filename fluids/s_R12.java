package jspclass.JFluids;

public class DoymusR12 extends MHFluidsSaturated{
	public double sg(double Txt){
		double Sgger,Sgk,Sgb,fark,ort;
		int k=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Sg1[]={0.8268, 0.8116, 0.7979, 0.7855, 0.7744, 0.7643, 0.7552, 0.747, 0.7396, 0.7329, 0.7269, 0.7214, 0.7165, 0.7121, 0.7082, 0.7046, 0.7014, 0.6986, 0.696, 0.6937, 0.6916, 0.6897, 0.6879, 0.6863, 0.6848, 0.6834, 0.682, 0.6806, 0.6792, 0.6777, 0.676, 0.6742, 0.6721, 0.6697, 0.6667, 0.6631, 0.6585, 0.6526, 0.6444, 0.6319, 0.6064, 0.5655};
		k = 0;
		try{
			do{
				k = k + 1;
			}while(!(Txt <= T[k]));
		}catch(ArrayIndexOutOfBoundsException e) {}
		Sgk = Sg1[k - 1]; Sgb = Sg1[k];
		fark = Txt - T[k - 1];
		ort = (Sgb - Sgk) / (T[k] - T[k - 1]);
		Sgger = Sgk + fark * ort;
		return Sgger;
	}//
	//
	//
	public double sf(double Txt){
		double Sfger,Sfk,Sfb,fark,ort;
		int k=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Sf1[]={-0.2084, -0.1854, -0.163, -0.1411, -0.1197, -0.0987, -0.0782, -0.0581, -0.0384, -0.019, 0, 0.0187, 0.0371, 0.0552, 0.073, 0.0906, 0.1079, 0.125, 0.1418, 0.1585, 0.175, 0.1914, 0.2076, 0.2237, 0.2397, 0.2557, 0.2716, 0.2875, 0.3034, 0.3194, 0.3355, 0.3518, 0.3683, 0.3851, 0.4023, 0.4201, 0.4385, 0.4579, 0.4788, 0.5023, 0.5322, 0.5651};
		k = 0;
		do{
			k = k + 1;
		}while(!(Txt <= T[k]));
		Sfk = Sf1[k - 1]; Sfb = Sf1[k];
		fark = Txt - T[k - 1];
		ort = (Sfb - Sfk) / (T[k] - T[k - 1]);
		Sfger = Sfk + fark * ort;
		return Sfger;
	}//
	//
	//
	public double vg(double Txt){
		//vg m3/kg
		double fark,ort,Vgk,Vgb,Vgger;
		int i=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Vg1[]={4.415545, 3.037316, 2.138345, 1.537651, 1.12728, 0.841166, 0.63791, 0.491, 0.383105, 0.302682, 0.24191, 0.195398, 0.159375, 0.131166, 0.108847, 0.091018, 0.076646, 0.064963, 0.055389, 0.047485, 0.040914, 0.035413, 0.03078, 0.026854, 0.023508, 0.020641, 0.018171, 0.016032, 0.01417, 0.012542, 0.011111, 0.009847, 0.008725, 0.007723, 0.006821, 0.006005, 0.005258, 0.004563, 0.003903, 0.003242, 0.002462, 0.001797};
		i = 0;
		do{
			i = i + 1;
		}while(!(Txt <= T[i]));
		Vgk = Vg1[i - 1]; Vgb = Vg1[i];
		fark = Txt - T[i - 1];
		ort = (Vgb - Vgk) / (T[i] - T[i - 1]);
		Vgger = Vgk + fark * ort;
		return Vgger;
	}//
	//
	//
	public double vf(double Txt){
		//vf m3/kg
		double fark,ort,Vfk,Vfb,Vfger;
		int i=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Vf1[]={0.000608, 0.000612, 0.000617, 0.000622, 0.000627, 0.000632, 0.000637, 0.000642, 0.000648, 0.000654, 0.000659, 0.000666, 0.000672, 0.000679, 0.000685, 0.000693, 0.0007, 0.000708, 0.000716, 0.000724, 0.000733, 0.000743, 0.000752, 0.000763, 0.000774, 0.000786, 0.000798, 0.000811, 0.000826, 0.000841, 0.000858, 0.000877, 0.000897, 0.00092, 0.000946, 0.000976, 0.001012, 0.001056, 0.001113, 0.001197, 0.001364, 0.001792};
		i = 0;
		do{
			i = i + 1;
		}while(!(Txt <= T[i]));
		Vfk = Vf1[i - 1]; Vfb = Vf1[i];
		fark = Txt - T[i - 1];
		ort = (Vfb - Vfk) / (T[i] - T[i - 1]);
		Vfger = Vfk + fark * ort;
		return Vfger;
	}//
	//
	//
	public double hg(double Txt){
		//Hg kJ/kg
		double fark,ort,Hgk,Hgb,Hgger;
		int i=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Hg1[]={146.375, 148.64, 150.924, 153.224, 155.536, 157.857, 160.184, 162.512, 164.84, 167.163, 169.479, 171.784, 174.076, 176.352, 178.61, 180.846, 183.058, 185.243, 187.397, 189.518, 191.602, 193.644, 195.641, 197.586, 199.475, 201.299, 203.051, 204.722, 206.298, 207.776, 209.109, 210.303, 211.321, 212.126, 212.665, 212.865, 212.614, 211.726, 209.843, 206.099, 196.484, 175.071};
		i = 0;
		do{
			i = i + 1;
		}while(!(Txt <= T[i]));
		Hgk = Hg1[i - 1]; Hgb = Hg1[i];
		fark = Txt - T[i - 1];
		ort = (Hgb - Hgk) / (T[i] - T[i - 1]);
		Hgger = Hgk + fark * ort;
		return Hgger;
	}//
	//
	//
	public double hf(double Txt){
		//Hf kJ/kg
		double fark,ort,Hfk,Hfb,Hfger;
		int i=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double Hf1[]={-43.243, -38.968, -34.688, -30.401, -26.103, -21.793, -17.469, -13.129, -8.772, -4.396, 0, 4.416, 8.854, 13.315, 17.8, 22.312, 26.851, 31.42, 36.022, 40.659, 45.337, 50.058, 54.828, 59.653, 64.539, 69.494, 74.527, 79.647, 84.868, 90.201, 95.665, 101.279, 107.067, 113.058, 119.291, 125.818, 132.708, 140.068, 148.076, 157.085, 168.059, 174.92};
		i = 0;
		do{
			i = i + 1;
		}while(!(Txt <= T[i]));
		Hfk = Hf1[i - 1]; Hfb = Hf1[i];
		fark = Txt - T[i - 1];
		ort = (Hfb - Hfk) / (T[i] - T[i - 1]);
		Hfger = Hfk + fark * ort;
		return Hfger;
	}//
	//
	//
	public double P(double Txt){
		double fark,ort,Pk,Pb,Pger;
		int i=0;
		double T[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double P1[]={2.8, 4.2, 6.2, 8.8, 12.3, 16.8, 22.6, 30, 39.1, 50.4, 64.2, 80.7, 100.4, 123.7, 150.9, 182.6, 219.1, 261, 308.6, 362.6, 423.3, 419.4, 567.3, 651.6, 744.9, 847.7, 960.7, 1084.3, 1219.3, 1366.3, 1525.9, 1698.8, 1885.8, 2087.4, 2304.6, 2538, 2788.5, 3056.9, 3344, 3650.9, 3978.4, 4115.5};
		i = 0;
		do{
			i = i + 1;
		}while(!(Txt <= T[i]));
		Pk = P1[i - 1]; Pb = P1[i];
		fark = Txt - T[i - 1];
		ort = (Pb - Pk) / (T[i] - T[i - 1]);
		Pger = Pk + fark * ort;
		return Pger;
	}//
	//
	//
	public double T(double Pxp){
		double Tger,fark,ort,Tk,Tb,Pger;
		int i=0;
		double T1[]={-90, -85, -80, -75, -70, -65, -60, -55, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 112};
		double P1[]={2.8, 4.2, 6.2, 8.8, 12.3, 16.8, 22.6, 30, 39.1, 50.4, 64.2, 80.7, 100.4, 123.7, 150.9, 182.6, 219.1, 261, 308.6, 362.6, 423.3, 419.4, 567.3, 651.6, 744.9, 847.7, 960.7, 1084.3, 1219.3, 1366.3, 1525.9, 1698.8, 1885.8, 2087.4, 2304.6, 2538, 2788.5, 3056.9, 3344, 3650.9, 3978.4, 4115.5};
		i = 0;
		do{
			i = i + 1;
		}while(!(Pxp <= P1[i]));
		Tk = T1[i - 1]; Tb = T1[i];
		fark = Pxp - P1[i - 1];
		ort = (Tb - Tk) / (P1[i] - P1[i - 1]);
		Tger = Tk + fark * ort;
		return Tger;
	}
}//End of DoymusFreon
